apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: external-secret-store
  labels:
    crossplane.io/xrd: xexternalsecretstores.wadtfy.bmwgroup.net
spec:
  writeConnectionSecretsToNamespace: crossplane-system
  compositeTypeRef:
    apiVersion: wadtfy.bmwgroup.net/v1beta1
    kind: XExternalSecretStore
  patchSets:
    - name: "metadata"
      patches:
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: "spec.product"
              - fromFieldPath: "spec.namespace"
            strategy: string
            string:
              fmt: "tenant-%s-%s-external-secret-store"
          toFieldPath: "metadata.name"
  resources:
    - name: ServiceAccount
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        spec:
          deletionPolicy: Delete
          forProvider:
            manifest:
              apiVersion: v1
              kind: ServiceAccount
              metadata:
                annotations:
                  eks.amazonaws.com/role-arn:
                labels:
                  created_by: crossplane
                  crossplane-kind: object.kubernetes.crossplane.io
                  xrd-kind: xexternalsecretstores.wadtfy.bmwgroup.net
                  xrd-helm_chart_version: {{ .Chart.Version }}
                name:
                namespace:
          providerConfigRef:
            name: {{ .Values.provider.wadtfyK8s }}
      patches:
        - fromFieldPath: "spec.namespace"
          toFieldPath: "spec.forProvider.manifest.metadata.namespace"
        - fromFieldPath: "spec.namespace"
          toFieldPath: "spec.forProvider.manifest.metadata.name"
          transforms:
            - type: string
              string:
                fmt: "external-secret-store-%s"
        - fromFieldPath: "status.roleArn"
          toFieldPath: "spec.forProvider.manifest.metadata.annotations[eks.amazonaws.com/role-arn]"
    - name: SecretStore
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        spec:
          deletionPolicy: Delete
          forProvider:
            manifest:
              apiVersion: external-secrets.io/v1beta1
              kind: SecretStore
              metadata:
                labels:
                  created_by: crossplane
                  crossplane-kind: object.kubernetes.crossplane.io
                  xrd-kind: xexternalsecretstores.wadtfy.bmwgroup.net
                  xrd-helm_chart_version: {{ .Chart.Version }}
                name:
                namespace:
              spec:
                provider:
                  aws:
                    service: SecretsManager
                    region:
                    auth:
                      jwt:
                        serviceAccountRef:
                          name:
          providerConfigRef:
            name: {{ .Values.provider.wadtfyK8s }}
      patches:
        - fromFieldPath: "spec.namespace"
          toFieldPath: "spec.forProvider.manifest.metadata.namespace"
        - fromFieldPath: "spec.namespace"
          toFieldPath: "spec.forProvider.manifest.metadata.name"
          transforms:
            - type: string
              string:
                fmt: "external-secret-store-%s"
        - fromFieldPath: "spec.namespace"
          toFieldPath: "spec.forProvider.manifest.spec.provider.aws.auth.jwt.serviceAccountRef.name"
          transforms:
            - type: string
              string:
                fmt: "external-secret-store-%s"
        - fromFieldPath: "spec.region"
          toFieldPath: "spec.forProvider.manifest.spec.provider.aws.region"
    - name: IamRole
      base:
        apiVersion: iam.aws.crossplane.io/v1beta1
        kind: Role
        metadata:
          name:
        spec:
          deletionPolicy: Delete
          forProvider:
            description: "WADTFY managed IRSA role to enable tenant's services to access resources in this account"
            path: "/wadtfy/irsa/"
            assumeRolePolicyDocument:
            tags:
              - key: created_by
                value: crossplane
              - key: xrd-kind
                value: xexternalsecretstores.wadtfy.bmwgroup.net
              - key: xrd-helm_chart_version
                value: {{ .Chart.Version }}
          providerConfigRef:
            name:
      patches:
        - type: PatchSet
          patchSetName: "metadata"
        - fromFieldPath: "spec.providerConfig"
          toFieldPath: "spec.providerConfigRef.name"
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: "spec.tenantAccountId"
              - fromFieldPath: "spec.region"
              - fromFieldPath: "spec.oidcProviderId"
              - fromFieldPath: "spec.oidcProviderId"
              - fromFieldPath: "spec.namespace"
              - fromFieldPath: "spec.namespace"
              - fromFieldPath: "spec.oidcProviderId"
            strategy: string
            string:
              fmt: |
                {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Action": "sts:AssumeRoleWithWebIdentity",
                      "Principal": {
                        "Federated": "arn:aws:iam::%s:oidc-provider/oidc.eks.%s.amazonaws.com/id/%s"
                      },
                      "Condition": {
                        "StringEquals": {
                          "oidc.eks.eu-west-1.amazonaws.com/id/%s:sub": "system:serviceaccount:%s:external-secret-store-%s",
                          "oidc.eks.eu-west-1.amazonaws.com/id/%s:aud": "sts.amazonaws.com"
                        }
                      },
                      "Effect": "Allow"
                    }
                  ]
                }
          toFieldPath: "spec.forProvider.assumeRolePolicyDocument"
        - type: ToCompositeFieldPath
          fromFieldPath: "status.atProvider.arn"
          toFieldPath: "status.roleArn"
    - name: IamPolicy
      base:
        apiVersion: iam.aws.crossplane.io/v1beta1
        kind: Policy
        metadata:
          name:
        spec:
          deletionPolicy: Delete
          forProvider:
            name:
            document:
            tags:
              - key: created_by
                value: crossplane
              - key: xrd-kind
                value: xexternalsecretstores.wadtfy.bmwgroup.net
              - key: xrd-helm_chart_version
                value: {{ .Chart.Version }}
          providerConfigRef:
            name:
      patches:
        - type: PatchSet
          patchSetName: "metadata"
        - fromFieldPath: "spec.providerConfig"
          toFieldPath: "spec.providerConfigRef.name"
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: "spec.product"
              - fromFieldPath: "spec.namespace"
            strategy: string
            string:
              fmt: "tenant-%s-%s-external-secret-store"
          toFieldPath: "spec.forProvider.name"
        - fromFieldPath: "spec.tenantAccountId"
          toFieldPath: "spec.forProvider.document"
          transforms:
            - type: string
              string:
                fmt: |
                  {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "secretsmanager:GetResourcePolicy",
                          "secretsmanager:GetSecretValue",
                          "secretsmanager:DescribeSecret",
                          "secretsmanager:ListSecretVersionIds"
                        ],
                        "Resource": "arn:aws:secretsmanager:*:%s:secret:*"
                      }
                    ]
                  }
        - type: ToCompositeFieldPath
          fromFieldPath: "status.atProvider.arn"
          toFieldPath: "status.policyArn"
    - name: IamRolePolicyAttachment
      base:
        apiVersion: iam.aws.crossplane.io/v1beta1
        kind: RolePolicyAttachment
        metadata:
          name:
        spec:
          deletionPolicy: Delete
          forProvider:
            policyArn:
            roleName:
          providerConfigRef:
            name:
      patches:
        - type: PatchSet
          patchSetName: "metadata"
        - fromFieldPath: "spec.providerConfig"
          toFieldPath: "spec.providerConfigRef.name"
        - fromFieldPath: "status.policyArn"
          toFieldPath: "spec.forProvider.policyArn"
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: "spec.product"
              - fromFieldPath: "spec.namespace"
            strategy: string
            string:
              fmt: "tenant-%s-%s-external-secret-store"
          toFieldPath: "spec.forProvider.roleName"
