apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: secret-store
  labels:
    crossplane.io/xrd: xsecretstores.wadtfy.bmwgroup.net
spec:
  writeConnectionSecretsToNamespace: crossplane-system
  environment:
    environmentConfigs:
      - type: Reference
        ref:
          name: wadtfy-env
  compositeTypeRef:
    apiVersion: wadtfy.bmwgroup.net/v1beta1
    kind: XSecretStore
  patchSets:
    - name: "k8s-tags"
      patches:
        - fromFieldPath: "spec.awsAccountId"
          toFieldPath: "spec.forProvider.manifest.metadata.annotations[wadtfy.bmwgroup.net/cluster-account-id]"
        - fromFieldPath: "spec.product"
          toFieldPath: "spec.forProvider.manifest.metadata.annotations[wadtfy.bmwgroup.net/product-name]"
        - fromFieldPath: "metadata.name"
          toFieldPath: "spec.forProvider.manifest.metadata.annotations[wadtfy.bmwgroup.net/component-name]"
  resources:
    - name: SecretStoreIrsa
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        spec:
          deletionPolicy: Delete
          forProvider:
            manifest:
              apiVersion: wadtfy.bmwgroup.net/v1beta1
              kind: Irsa
              metadata:
                annotations:
                  wadtfy.bmwgroup.net/xrd-type: XSecretStore
                  wadtfy.bmwgroup.net/xrd-version: v1beta1
                  wadtfy.bmwgroup.net/cluster-account-id:
                  wadtfy.bmwgroup.net/product-name:
                  wadtfy.bmwgroup.net/component-name:
                name:
                namespace:
              spec:
                compositionRef:
                  name:
                policyDocument:
          providerConfigRef:
            name:
      patches:
        - type: PatchSet
          patchSetName: "k8s-tags"
        - fromFieldPath: "spec.namespace"
          toFieldPath: "spec.forProvider.manifest.metadata.namespace"
        - fromFieldPath: "spec.env.defaultName"
          toFieldPath: "spec.forProvider.manifest.metadata.name"
        - fromFieldPath: "spec.irsaCompositionRef"
          toFieldPath: "spec.forProvider.manifest.spec.compositionRef.name"
        - fromFieldPath: "spec.awsAccountId"
          toFieldPath: "spec.forProvider.manifest.spec.policyDocument"
          transforms:
            - type: string
              string:
                fmt: |
                  {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "secretsmanager:GetResourcePolicy",
                          "secretsmanager:GetSecretValue",
                          "secretsmanager:DescribeSecret",
                          "secretsmanager:ListSecretVersionIds"
                        ],
                        "Resource": "arn:aws:secretsmanager:*:%s:secret:*"
                      }
                    ]
                  }
        - type: FromEnvironmentFieldPath
          fromFieldPath: "providerConfigKubernetes"
          toFieldPath: "spec.providerConfigRef.name"
    - name: SecretStore
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        spec:
          deletionPolicy: Delete
          forProvider:
            manifest:
              apiVersion: external-secrets.io/v1beta1
              kind: SecretStore
              metadata:
                annotations:
                  wadtfy.bmwgroup.net/xrd-type: XSecretStore
                  wadtfy.bmwgroup.net/xrd-version: v1beta1
                  wadtfy.bmwgroup.net/cluster-account-id:
                  wadtfy.bmwgroup.net/product-name:
                  wadtfy.bmwgroup.net/component-name:
                name:
                namespace:
              spec:
                provider:
                  aws:
                    service: SecretsManager
                    region:
                    auth:
                      jwt:
                        serviceAccountRef:
                          name:
          providerConfigRef:
            name:
      patches:
        - type: PatchSet
          patchSetName: "k8s-tags"
        - fromFieldPath: "spec.namespace"
          toFieldPath: "spec.forProvider.manifest.metadata.namespace"
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: "spec.env.defaultName"
              - fromFieldPath: "spec.namespace"
            strategy: string
            string:
              fmt: "%s-%s"
          toFieldPath: "spec.forProvider.manifest.metadata.name"
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: "spec.env.defaultName"
              - fromFieldPath: "spec.namespace"
            strategy: string
            string:
              # Service Account Name generated by Irsa Composition will be <claim-name>-<namespace>.
              # In this case the claim-name will be secret-store and thus
              # the resulting SA name will be secret-store-<namespace>
              # The claim-name is identical with the name of the IRSA component defined in the SecretStoreIrsa
              # resource.
              fmt: "%s-%s"
          toFieldPath: "spec.forProvider.manifest.spec.provider.aws.auth.jwt.serviceAccountRef.name"
        - type: FromEnvironmentFieldPath
          fromFieldPath: "awsRegion"
          toFieldPath: "spec.forProvider.manifest.spec.provider.aws.region"
        - type: FromEnvironmentFieldPath
          fromFieldPath: "providerConfigKubernetes"
          toFieldPath: "spec.providerConfigRef.name"
